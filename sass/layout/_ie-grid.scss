// Grid spec for IE 10/11

$grid-columns:  12;
$gutter:  $spacing-unit / $content-width * 100%;


@mixin ms-grid ($prefix, $space) {

  @for $i from 1 through $grid-columns {
    $col-width: (100% + $space) / $i;

    &.grid--#{$prefix}cols-#{$i} {
      & > * {
        float: left;
        width: $col-width - $space;
        margin-right: $space;

        &:nth-child(#{$i}n + 1) {
          clear: both;
        }
        &:not(:nth-child(#{$i}n + 1)) {
          clear: none;
        }
        &:nth-child(#{$i}n + #{$i}),
        &:last-child {
          margin-right: 0;
        }
      }

      @for $sp from 1 through $i {
        & > .#{$prefix}col--span-#{$sp} {
          width: ($sp * $col-width) - $space;
        }
      }

      @for $start from 1 through $i {
        & > .#{$prefix}col--start-#{$start} {
          clear: both;
          margin-left: (($start - 1) * $col-width);

          @for $end from ($start + 1) through $i {
            &.#{$prefix}col--end-#{$end} {
              width: (($end - $start) * $col-width) - $space;
            }
          }
        }
      }
    }
  }
}


@mixin ms-set($space) {
  @include ms-grid("", $space);

  @include narrow {
    @include ms-grid("s-", $space);
  }
  @include tablet {
    @include ms-grid("m-", $space);
  }
  @include desktop {
    @include ms-grid("l-", $space);
  }
}


.grid {
  display: block !important;

  &::after {
    content: " ";
    display: block;
    clear: both;
  }


  // Gaps
  &--row-gap > * {
    margin-bottom: $spacing-unit;
  }
  &--row-gap--x2 > * {
    margin-bottom: $spacing-unit * 2;
  }


  // Grid spec
  @include ms-set(0%);

  &.grid--col-gap {
    @include ms-set($gutter);
  }

  &.grid--col-gap--x2 {
    @include ms-set($gutter * 2);
  }


  // Helpers
  .ie-omega {
    margin-right: 0 !important;
  }
  .ie-no-clear {
    clear: none !important;
  }
  .ie-right {
    @include tablet {
      float: right;
      margin-right: 0;
    }
  }
}
